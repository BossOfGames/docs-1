"use strict";(self.webpackChunkphpvms_docs=self.webpackChunkphpvms_docs||[]).push([[902],{4137:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return v}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),v=r,m=c["".concat(s,".").concat(v)]||c[v]||u[v]||a;return n?i.createElement(m,l(l({ref:t},d),{},{components:n})):i.createElement(m,l({ref:t},d))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5700:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return v},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var i=n(7462),r=n(3366),a=(n(7294),n(4137)),l=["components"],o={id:"optimizing",title:"Optimizing",sidebar_title:"Optimizing"},s=void 0,p={unversionedId:"config/optimizing",id:"config/optimizing",title:"Optimizing",description:"These are just some basic optimizing. For additional optimization information, refer to the Laravel docs",source:"@site/docs/config/optimizing.mdx",sourceDirName:"config",slug:"/config/optimizing",permalink:"/config/optimizing",draft:!1,editUrl:"https://github.com/phpvms/docs/tree/master/docs/config/optimizing.mdx",tags:[],version:"current",frontMatter:{id:"optimizing",title:"Optimizing",sidebar_title:"Optimizing"},sidebar:"docs",previous:{title:"Email",permalink:"/config/email"},next:{title:"Notifications",permalink:"/config/notifications"}},d={},u=[{value:"Drivers",id:"drivers",level:2},{value:"Redis",id:"redis",level:3},{value:"PHP-APC",id:"php-apc",level:3},{value:"Additional Drivers",id:"additional-drivers",level:3},{value:"Environment/Debug Modes",id:"environmentdebug-modes",level:2},{value:"Environment",id:"environment",level:3},{value:"Debug Mode",id:"debug-mode",level:3},{value:"Sessions",id:"sessions",level:2},{value:"Redis",id:"redis-1",level:4},{value:"PHP APC",id:"php-apc-1",level:4},{value:"Caching",id:"caching",level:2},{value:"File",id:"file",level:4},{value:"Redis",id:"redis-2",level:4},{value:"PHP APC",id:"php-apc-2",level:4},{value:"Other drivers",id:"other-drivers",level:4},{value:"Queue Driver",id:"queue-driver",level:2},{value:"Database Driver",id:"database-driver",level:4},{value:"Redis Driver",id:"redis-driver",level:4}],c={toc:u};function v(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"These are just some basic optimizing. For additional optimization information, refer to the Laravel docs"),(0,a.kt)("h2",{id:"drivers"},"Drivers"),(0,a.kt)("h3",{id:"redis"},"Redis"),(0,a.kt)("p",null,"Installing Redis is one way to enable optimizations. After installing, add to the ",(0,a.kt)("inlineCode",{parentName:"p"},"config.php")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="env.php"',title:'"env.php"'},"CACHE_DRIVER=redis\n")),(0,a.kt)("h3",{id:"php-apc"},"PHP-APC"),(0,a.kt)("p",null,"PHP-APC needs to be installed server-side (as a PHP extension) for it to be made available. No additional configuration is required on the database driver level."),(0,a.kt)("h3",{id:"additional-drivers"},"Additional Drivers"),(0,a.kt)("p",null,"Any additional drivers supported by Laravel are automatically supported by phpVMS."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"environmentdebug-modes"},"Environment/Debug Modes"),(0,a.kt)("h3",{id:"environment"},"Environment"),(0,a.kt)("p",null,"When going live, this should be set to ",(0,a.kt)("inlineCode",{parentName:"p"},"production"),". By default, it's ",(0,a.kt)("inlineCode",{parentName:"p"},"dev"),". Change this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="env.php"',title:'"env.php"'},"APP_ENV=production\n")),(0,a.kt)("h3",{id:"debug-mode"},"Debug Mode"),(0,a.kt)("p",null,"This adjusts the logging level, making it more verbose. The default value is ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", and should be set to ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," when you're live/in-production."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="env.php"',title:'"env.php"'},"APP_DEBUG=true\nDEBUG_TOOLBAR=false\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"sessions"},"Sessions"),(0,a.kt)("p",null,"Sessions store the logged in users and other information. By default, they're stored on disk."),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"The Redis store is recommended if you have access to it"))),(0,a.kt)("h4",{id:"redis-1"},"Redis"),(0,a.kt)("p",null,"Sessions can be saved in PHP."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="env.php"',title:'"env.php"'},"SESSION_DRIVER=redis\n")),(0,a.kt)("h4",{id:"php-apc-1"},"PHP APC"),(0,a.kt)("p",null,"Sessions can also be saved in PHP."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="env.php"',title:'"env.php"'},"SESSION_DRIVER=apc\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"caching"},"Caching"),(0,a.kt)("p",null,"By default, caching is disabled."),(0,a.kt)("h4",{id:"file"},"File"),(0,a.kt)("p",null,"You can cache to flat files, instead of hitting the database constantly. These will be stored in the ",(0,a.kt)("inlineCode",{parentName:"p"},"storage/framework/cache")," folder"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="env.php"',title:'"env.php"'},"CACHE_DRIVER=file\n")),(0,a.kt)("h4",{id:"redis-2"},"Redis"),(0,a.kt)("p",null,"Instead of using PHP APC, you can also use Redis for caching"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="env.php"',title:'"env.php"'},"CACHE_DRIVER=redis\n")),(0,a.kt)("h4",{id:"php-apc-2"},"PHP APC"),(0,a.kt)("p",null,"This doesn't require any configuration on the server side"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="env.php"',title:'"env.php"'},"CACHE_DRIVER=apc\n")),(0,a.kt)("h4",{id:"other-drivers"},"Other drivers"),(0,a.kt)("p",null,"You can see the ",(0,a.kt)("inlineCode",{parentName:"p"},"config/cache.php")," file for the other available drivers (memcached, redis, etc)"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"queue-driver"},"Queue Driver"),(0,a.kt)("p",null,"phpVMS uses asyncronous queues for several tasks, including sending emails and exporting to vaCentral. The default mode is ",(0,a.kt)("inlineCode",{parentName:"p"},"sync"),", which means the tasks are done in-line. This could be useful if you're running a high-traffic VA and on your own VPS."),(0,a.kt)("p",null,"If you're running into performance issues, try changing the ",(0,a.kt)("inlineCode",{parentName:"p"},"QUEUE_DRIVER")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"database")," (probably the easiest option), or another queue driver option (look in the ",(0,a.kt)("inlineCode",{parentName:"p"},"config/queue.php")," for available options)"),(0,a.kt)("h4",{id:"database-driver"},"Database Driver"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="env.php"',title:'"env.php"'},"QUEUE_DRIVER=database\n")),(0,a.kt)("h4",{id:"redis-driver"},"Redis Driver"),(0,a.kt)("p",null,"If you have Redis installed, you can use that:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="env.php"',title:'"env.php"'},"QUEUE_DRIVER=redis\n")))}v.isMDXComponent=!0}}]);